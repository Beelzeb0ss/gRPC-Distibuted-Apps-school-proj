// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/prison.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PrisonService {
  public static partial class PrisonSrv
  {
    static readonly string __ServiceName = "prison.PrisonSrv";

    static readonly grpc::Marshaller<global::PrisonService.IdMessage> __Marshaller_prison_IdMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.IdMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.PrisonerMessage> __Marshaller_prison_PrisonerMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.PrisonerMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.PrisonerArrayMessage> __Marshaller_prison_PrisonerArrayMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.PrisonerArrayMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.SearchParamMessage> __Marshaller_prison_SearchParamMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.SearchParamMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.LocationMessage> __Marshaller_prison_LocationMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.LocationMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.LocationArrayMessage> __Marshaller_prison_LocationArrayMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.LocationArrayMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.WorkerMessage> __Marshaller_prison_WorkerMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.WorkerMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.WorkerArrayMessage> __Marshaller_prison_WorkerArrayMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.WorkerArrayMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.JobMessage> __Marshaller_prison_JobMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.JobMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.JobArrayMessage> __Marshaller_prison_JobArrayMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.JobArrayMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.AccessReqMessage> __Marshaller_prison_AccessReqMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.AccessReqMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PrisonService.AccessReplyMessage> __Marshaller_prison_AccessReplyMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PrisonService.AccessReplyMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::PrisonService.IdMessage, global::PrisonService.PrisonerMessage> __Method_GetPrisonerByID = new grpc::Method<global::PrisonService.IdMessage, global::PrisonService.PrisonerMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPrisonerByID",
        __Marshaller_prison_IdMessage,
        __Marshaller_prison_PrisonerMessage);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PrisonService.PrisonerArrayMessage> __Method_GetAllPrisoners = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PrisonService.PrisonerArrayMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllPrisoners",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_prison_PrisonerArrayMessage);

    static readonly grpc::Method<global::PrisonService.SearchParamMessage, global::PrisonService.PrisonerArrayMessage> __Method_GetPrisonersByName = new grpc::Method<global::PrisonService.SearchParamMessage, global::PrisonService.PrisonerArrayMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPrisonersByName",
        __Marshaller_prison_SearchParamMessage,
        __Marshaller_prison_PrisonerArrayMessage);

    static readonly grpc::Method<global::PrisonService.PrisonerMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddPrisoner = new grpc::Method<global::PrisonService.PrisonerMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPrisoner",
        __Marshaller_prison_PrisonerMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.PrisonerMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdatePrisoner = new grpc::Method<global::PrisonService.PrisonerMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePrisoner",
        __Marshaller_prison_PrisonerMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.IdMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeletePrisonerByID = new grpc::Method<global::PrisonService.IdMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePrisonerByID",
        __Marshaller_prison_IdMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.IdMessage, global::PrisonService.LocationMessage> __Method_GetLocationByID = new grpc::Method<global::PrisonService.IdMessage, global::PrisonService.LocationMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLocationByID",
        __Marshaller_prison_IdMessage,
        __Marshaller_prison_LocationMessage);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PrisonService.LocationArrayMessage> __Method_GetAllLocations = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PrisonService.LocationArrayMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllLocations",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_prison_LocationArrayMessage);

    static readonly grpc::Method<global::PrisonService.SearchParamMessage, global::PrisonService.LocationArrayMessage> __Method_GetLocationsByName = new grpc::Method<global::PrisonService.SearchParamMessage, global::PrisonService.LocationArrayMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLocationsByName",
        __Marshaller_prison_SearchParamMessage,
        __Marshaller_prison_LocationArrayMessage);

    static readonly grpc::Method<global::PrisonService.LocationMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddLocation = new grpc::Method<global::PrisonService.LocationMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddLocation",
        __Marshaller_prison_LocationMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.LocationMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateLocation = new grpc::Method<global::PrisonService.LocationMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateLocation",
        __Marshaller_prison_LocationMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.IdMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteLocationByID = new grpc::Method<global::PrisonService.IdMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteLocationByID",
        __Marshaller_prison_IdMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.IdMessage, global::PrisonService.WorkerMessage> __Method_GetWorkerByID = new grpc::Method<global::PrisonService.IdMessage, global::PrisonService.WorkerMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkerByID",
        __Marshaller_prison_IdMessage,
        __Marshaller_prison_WorkerMessage);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PrisonService.WorkerArrayMessage> __Method_GetAllWorkers = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PrisonService.WorkerArrayMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllWorkers",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_prison_WorkerArrayMessage);

    static readonly grpc::Method<global::PrisonService.SearchParamMessage, global::PrisonService.WorkerArrayMessage> __Method_GetWorkersByName = new grpc::Method<global::PrisonService.SearchParamMessage, global::PrisonService.WorkerArrayMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkersByName",
        __Marshaller_prison_SearchParamMessage,
        __Marshaller_prison_WorkerArrayMessage);

    static readonly grpc::Method<global::PrisonService.WorkerMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddWorker = new grpc::Method<global::PrisonService.WorkerMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddWorker",
        __Marshaller_prison_WorkerMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.WorkerMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateWorker = new grpc::Method<global::PrisonService.WorkerMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorker",
        __Marshaller_prison_WorkerMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.IdMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteWorkerByID = new grpc::Method<global::PrisonService.IdMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWorkerByID",
        __Marshaller_prison_IdMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.IdMessage, global::PrisonService.JobMessage> __Method_GetJobByID = new grpc::Method<global::PrisonService.IdMessage, global::PrisonService.JobMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetJobByID",
        __Marshaller_prison_IdMessage,
        __Marshaller_prison_JobMessage);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PrisonService.JobArrayMessage> __Method_GetAllJobs = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PrisonService.JobArrayMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllJobs",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_prison_JobArrayMessage);

    static readonly grpc::Method<global::PrisonService.SearchParamMessage, global::PrisonService.JobArrayMessage> __Method_GetJobsByName = new grpc::Method<global::PrisonService.SearchParamMessage, global::PrisonService.JobArrayMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetJobsByName",
        __Marshaller_prison_SearchParamMessage,
        __Marshaller_prison_JobArrayMessage);

    static readonly grpc::Method<global::PrisonService.JobMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddJob = new grpc::Method<global::PrisonService.JobMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddJob",
        __Marshaller_prison_JobMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.JobMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateJob = new grpc::Method<global::PrisonService.JobMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateJob",
        __Marshaller_prison_JobMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.IdMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteJobByID = new grpc::Method<global::PrisonService.IdMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteJobByID",
        __Marshaller_prison_IdMessage,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PrisonService.AccessReqMessage, global::PrisonService.AccessReplyMessage> __Method_AccessRequest = new grpc::Method<global::PrisonService.AccessReqMessage, global::PrisonService.AccessReplyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AccessRequest",
        __Marshaller_prison_AccessReqMessage,
        __Marshaller_prison_AccessReplyMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PrisonService.PrisonReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PrisonSrv</summary>
    public partial class PrisonSrvClient : grpc::ClientBase<PrisonSrvClient>
    {
      /// <summary>Creates a new client for PrisonSrv</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PrisonSrvClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PrisonSrv that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PrisonSrvClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PrisonSrvClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PrisonSrvClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::PrisonService.PrisonerMessage GetPrisonerByID(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPrisonerByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.PrisonerMessage GetPrisonerByID(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPrisonerByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.PrisonerMessage> GetPrisonerByIDAsync(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPrisonerByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.PrisonerMessage> GetPrisonerByIDAsync(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPrisonerByID, null, options, request);
      }
      public virtual global::PrisonService.PrisonerArrayMessage GetAllPrisoners(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllPrisoners(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.PrisonerArrayMessage GetAllPrisoners(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllPrisoners, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.PrisonerArrayMessage> GetAllPrisonersAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllPrisonersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.PrisonerArrayMessage> GetAllPrisonersAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllPrisoners, null, options, request);
      }
      public virtual global::PrisonService.PrisonerArrayMessage GetPrisonersByName(global::PrisonService.SearchParamMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPrisonersByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.PrisonerArrayMessage GetPrisonersByName(global::PrisonService.SearchParamMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPrisonersByName, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.PrisonerArrayMessage> GetPrisonersByNameAsync(global::PrisonService.SearchParamMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPrisonersByNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.PrisonerArrayMessage> GetPrisonersByNameAsync(global::PrisonService.SearchParamMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPrisonersByName, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddPrisoner(global::PrisonService.PrisonerMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPrisoner(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddPrisoner(global::PrisonService.PrisonerMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddPrisoner, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddPrisonerAsync(global::PrisonService.PrisonerMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPrisonerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddPrisonerAsync(global::PrisonService.PrisonerMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddPrisoner, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdatePrisoner(global::PrisonService.PrisonerMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePrisoner(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdatePrisoner(global::PrisonService.PrisonerMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePrisoner, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdatePrisonerAsync(global::PrisonService.PrisonerMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePrisonerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdatePrisonerAsync(global::PrisonService.PrisonerMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePrisoner, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePrisonerByID(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePrisonerByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePrisonerByID(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePrisonerByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePrisonerByIDAsync(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePrisonerByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePrisonerByIDAsync(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePrisonerByID, null, options, request);
      }
      public virtual global::PrisonService.LocationMessage GetLocationByID(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.LocationMessage GetLocationByID(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLocationByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.LocationMessage> GetLocationByIDAsync(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.LocationMessage> GetLocationByIDAsync(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLocationByID, null, options, request);
      }
      public virtual global::PrisonService.LocationArrayMessage GetAllLocations(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllLocations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.LocationArrayMessage GetAllLocations(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllLocations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.LocationArrayMessage> GetAllLocationsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllLocationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.LocationArrayMessage> GetAllLocationsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllLocations, null, options, request);
      }
      public virtual global::PrisonService.LocationArrayMessage GetLocationsByName(global::PrisonService.SearchParamMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationsByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.LocationArrayMessage GetLocationsByName(global::PrisonService.SearchParamMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLocationsByName, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.LocationArrayMessage> GetLocationsByNameAsync(global::PrisonService.SearchParamMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationsByNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.LocationArrayMessage> GetLocationsByNameAsync(global::PrisonService.SearchParamMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLocationsByName, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddLocation(global::PrisonService.LocationMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddLocation(global::PrisonService.LocationMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddLocation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddLocationAsync(global::PrisonService.LocationMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddLocationAsync(global::PrisonService.LocationMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddLocation, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateLocation(global::PrisonService.LocationMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateLocation(global::PrisonService.LocationMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateLocation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateLocationAsync(global::PrisonService.LocationMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateLocationAsync(global::PrisonService.LocationMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateLocation, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteLocationByID(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLocationByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteLocationByID(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteLocationByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLocationByIDAsync(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLocationByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLocationByIDAsync(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteLocationByID, null, options, request);
      }
      public virtual global::PrisonService.WorkerMessage GetWorkerByID(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkerByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.WorkerMessage GetWorkerByID(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkerByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.WorkerMessage> GetWorkerByIDAsync(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkerByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.WorkerMessage> GetWorkerByIDAsync(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkerByID, null, options, request);
      }
      public virtual global::PrisonService.WorkerArrayMessage GetAllWorkers(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllWorkers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.WorkerArrayMessage GetAllWorkers(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllWorkers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.WorkerArrayMessage> GetAllWorkersAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllWorkersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.WorkerArrayMessage> GetAllWorkersAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllWorkers, null, options, request);
      }
      public virtual global::PrisonService.WorkerArrayMessage GetWorkersByName(global::PrisonService.SearchParamMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkersByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.WorkerArrayMessage GetWorkersByName(global::PrisonService.SearchParamMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkersByName, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.WorkerArrayMessage> GetWorkersByNameAsync(global::PrisonService.SearchParamMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkersByNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.WorkerArrayMessage> GetWorkersByNameAsync(global::PrisonService.SearchParamMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkersByName, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddWorker(global::PrisonService.WorkerMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddWorker(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddWorker(global::PrisonService.WorkerMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddWorker, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddWorkerAsync(global::PrisonService.WorkerMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddWorkerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddWorkerAsync(global::PrisonService.WorkerMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddWorker, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateWorker(global::PrisonService.WorkerMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorker(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateWorker(global::PrisonService.WorkerMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWorker, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateWorkerAsync(global::PrisonService.WorkerMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateWorkerAsync(global::PrisonService.WorkerMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWorker, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteWorkerByID(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkerByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteWorkerByID(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWorkerByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteWorkerByIDAsync(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkerByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteWorkerByIDAsync(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWorkerByID, null, options, request);
      }
      public virtual global::PrisonService.JobMessage GetJobByID(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.JobMessage GetJobByID(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetJobByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.JobMessage> GetJobByIDAsync(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.JobMessage> GetJobByIDAsync(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetJobByID, null, options, request);
      }
      public virtual global::PrisonService.JobArrayMessage GetAllJobs(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.JobArrayMessage GetAllJobs(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllJobs, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.JobArrayMessage> GetAllJobsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.JobArrayMessage> GetAllJobsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllJobs, null, options, request);
      }
      public virtual global::PrisonService.JobArrayMessage GetJobsByName(global::PrisonService.SearchParamMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobsByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.JobArrayMessage GetJobsByName(global::PrisonService.SearchParamMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetJobsByName, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.JobArrayMessage> GetJobsByNameAsync(global::PrisonService.SearchParamMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobsByNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.JobArrayMessage> GetJobsByNameAsync(global::PrisonService.SearchParamMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetJobsByName, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddJob(global::PrisonService.JobMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddJob(global::PrisonService.JobMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddJob, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddJobAsync(global::PrisonService.JobMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddJobAsync(global::PrisonService.JobMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddJob, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateJob(global::PrisonService.JobMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateJob(global::PrisonService.JobMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateJob, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateJobAsync(global::PrisonService.JobMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateJobAsync(global::PrisonService.JobMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateJob, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteJobByID(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteJobByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteJobByID(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteJobByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteJobByIDAsync(global::PrisonService.IdMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteJobByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteJobByIDAsync(global::PrisonService.IdMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteJobByID, null, options, request);
      }
      public virtual global::PrisonService.AccessReplyMessage AccessRequest(global::PrisonService.AccessReqMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccessRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PrisonService.AccessReplyMessage AccessRequest(global::PrisonService.AccessReqMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AccessRequest, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.AccessReplyMessage> AccessRequestAsync(global::PrisonService.AccessReqMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccessRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PrisonService.AccessReplyMessage> AccessRequestAsync(global::PrisonService.AccessReqMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AccessRequest, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PrisonSrvClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PrisonSrvClient(configuration);
      }
    }

  }
}
#endregion
