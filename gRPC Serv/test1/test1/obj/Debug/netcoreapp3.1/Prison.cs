// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/prison.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PrisonService {

  /// <summary>Holder for reflection information generated from Protos/prison.proto</summary>
  public static partial class PrisonReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/prison.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PrisonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90b3MvcHJpc29uLnByb3RvEgZwcmlzb24aG2dvb2dsZS9wcm90b2J1",
            "Zi9lbXB0eS5wcm90byIuChBBY2Nlc3NSZXFNZXNzYWdlEgwKBG5hbWUYASAB",
            "KAkSDAoEcGFzcxgCIAEoCSIjChJBY2Nlc3NSZXBseU1lc3NhZ2USDQoFdG9r",
            "ZW4YASABKAkiFwoJSWRNZXNzYWdlEgoKAmlkGAEgASgFIkIKFFByaXNvbmVy",
            "QXJyYXlNZXNzYWdlEioKCXByaXNvbmVycxgBIAMoCzIXLnByaXNvbi5Qcmlz",
            "b25lck1lc3NhZ2UiQgoUTG9jYXRpb25BcnJheU1lc3NhZ2USKgoJbG9jYXRp",
            "b25zGAEgAygLMhcucHJpc29uLkxvY2F0aW9uTWVzc2FnZSI8ChJXb3JrZXJB",
            "cnJheU1lc3NhZ2USJgoHd29ya2VycxgBIAMoCzIVLnByaXNvbi5Xb3JrZXJN",
            "ZXNzYWdlIjMKD0pvYkFycmF5TWVzc2FnZRIgCgRqb2JzGAEgAygLMhIucHJp",
            "c29uLkpvYk1lc3NhZ2UiHAoLQm9vbE1lc3NhZ2USDQoFcmVwbHkYASABKAgi",
            "hwEKD1ByaXNvbmVyTWVzc2FnZRIKCgJpZBgBIAEoBRINCgVmbmFtZRgCIAEo",
            "CRINCgVsbmFtZRgDIAEoCRILCgNhZ2UYBCABKAESFAoMc2VudGVuY2VEYXRl",
            "GAUgASgDEhMKC3JlbGVhc2VEYXRlGAYgASgDEhIKCmxvY2F0aW9uSWQYByAB",
            "KAUiKwoPTG9jYXRpb25NZXNzYWdlEgoKAmlkGAEgASgFEgwKBG5hbWUYAiAB",
            "KAkiXAoNV29ya2VyTWVzc2FnZRIKCgJpZBgBIAEoBRINCgVmbmFtZRgCIAEo",
            "CRINCgVsbmFtZRgDIAEoCRINCgVqb2JJZBgEIAEoBRISCgpsb2NhdGlvbklk",
            "GAUgASgFIicKCkpvYk1lc3NhZ2USCgoCaWQYASABKAUSDQoFdGl0bGUYAiAB",
            "KAkywwoKCVByaXNvblNydhI9Cg9HZXRQcmlzb25lckJ5SUQSES5wcmlzb24u",
            "SWRNZXNzYWdlGhcucHJpc29uLlByaXNvbmVyTWVzc2FnZRJHCg9HZXRBbGxQ",
            "cmlzb25lcnMSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaHC5wcmlzb24uUHJp",
            "c29uZXJBcnJheU1lc3NhZ2USPgoLQWRkUHJpc29uZXISFy5wcmlzb24uUHJp",
            "c29uZXJNZXNzYWdlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EkEKDlVwZGF0",
            "ZVByaXNvbmVyEhcucHJpc29uLlByaXNvbmVyTWVzc2FnZRoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eRI/ChJEZWxldGVQcmlzb25lckJ5SUQSES5wcmlzb24u",
            "SWRNZXNzYWdlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ej0KD0dldExvY2F0",
            "aW9uQnlJRBIRLnByaXNvbi5JZE1lc3NhZ2UaFy5wcmlzb24uTG9jYXRpb25N",
            "ZXNzYWdlEkcKD0dldEFsbExvY2F0aW9ucxIWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eRocLnByaXNvbi5Mb2NhdGlvbkFycmF5TWVzc2FnZRI+CgtBZGRMb2Nh",
            "dGlvbhIXLnByaXNvbi5Mb2NhdGlvbk1lc3NhZ2UaFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkSQQoOVXBkYXRlTG9jYXRpb24SFy5wcmlzb24uTG9jYXRpb25N",
            "ZXNzYWdlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ej8KEkRlbGV0ZUxvY2F0",
            "aW9uQnlJRBIRLnByaXNvbi5JZE1lc3NhZ2UaFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkSOQoNR2V0V29ya2VyQnlJRBIRLnByaXNvbi5JZE1lc3NhZ2UaFS5w",
            "cmlzb24uV29ya2VyTWVzc2FnZRJDCg1HZXRBbGxXb3JrZXJzEhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5GhoucHJpc29uLldvcmtlckFycmF5TWVzc2FnZRI6",
            "CglBZGRXb3JrZXISFS5wcmlzb24uV29ya2VyTWVzc2FnZRoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eRI9CgxVcGRhdGVXb3JrZXISFS5wcmlzb24uV29ya2Vy",
            "TWVzc2FnZRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRI9ChBEZWxldGVXb3Jr",
            "ZXJCeUlEEhEucHJpc29uLklkTWVzc2FnZRoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eRIzCgpHZXRKb2JCeUlEEhEucHJpc29uLklkTWVzc2FnZRoSLnByaXNv",
            "bi5Kb2JNZXNzYWdlEj0KCkdldEFsbEpvYnMSFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkaFy5wcmlzb24uSm9iQXJyYXlNZXNzYWdlEjQKBkFkZEpvYhISLnBy",
            "aXNvbi5Kb2JNZXNzYWdlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EjcKCVVw",
            "ZGF0ZUpvYhISLnByaXNvbi5Kb2JNZXNzYWdlGhYuZ29vZ2xlLnByb3RvYnVm",
            "LkVtcHR5EjoKDURlbGV0ZUpvYkJ5SUQSES5wcmlzb24uSWRNZXNzYWdlGhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5EkUKDUFjY2Vzc1JlcXVlc3QSGC5wcmlz",
            "b24uQWNjZXNzUmVxTWVzc2FnZRoaLnByaXNvbi5BY2Nlc3NSZXBseU1lc3Nh",
            "Z2VCEKoCDVByaXNvblNlcnZpY2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.AccessReqMessage), global::PrisonService.AccessReqMessage.Parser, new[]{ "Name", "Pass" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.AccessReplyMessage), global::PrisonService.AccessReplyMessage.Parser, new[]{ "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.IdMessage), global::PrisonService.IdMessage.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.PrisonerArrayMessage), global::PrisonService.PrisonerArrayMessage.Parser, new[]{ "Prisoners" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.LocationArrayMessage), global::PrisonService.LocationArrayMessage.Parser, new[]{ "Locations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.WorkerArrayMessage), global::PrisonService.WorkerArrayMessage.Parser, new[]{ "Workers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.JobArrayMessage), global::PrisonService.JobArrayMessage.Parser, new[]{ "Jobs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.BoolMessage), global::PrisonService.BoolMessage.Parser, new[]{ "Reply" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.PrisonerMessage), global::PrisonService.PrisonerMessage.Parser, new[]{ "Id", "Fname", "Lname", "Age", "SentenceDate", "ReleaseDate", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.LocationMessage), global::PrisonService.LocationMessage.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.WorkerMessage), global::PrisonService.WorkerMessage.Parser, new[]{ "Id", "Fname", "Lname", "JobId", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PrisonService.JobMessage), global::PrisonService.JobMessage.Parser, new[]{ "Id", "Title" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AccessReqMessage : pb::IMessage<AccessReqMessage> {
    private static readonly pb::MessageParser<AccessReqMessage> _parser = new pb::MessageParser<AccessReqMessage>(() => new AccessReqMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccessReqMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessReqMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessReqMessage(AccessReqMessage other) : this() {
      name_ = other.name_;
      pass_ = other.pass_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessReqMessage Clone() {
      return new AccessReqMessage(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pass" field.</summary>
    public const int PassFieldNumber = 2;
    private string pass_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pass {
      get { return pass_; }
      set {
        pass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccessReqMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccessReqMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Pass != other.Pass) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Pass.Length != 0) hash ^= Pass.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Pass.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Pass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pass);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccessReqMessage other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Pass.Length != 0) {
        Pass = other.Pass;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Pass = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccessReplyMessage : pb::IMessage<AccessReplyMessage> {
    private static readonly pb::MessageParser<AccessReplyMessage> _parser = new pb::MessageParser<AccessReplyMessage>(() => new AccessReplyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccessReplyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessReplyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessReplyMessage(AccessReplyMessage other) : this() {
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessReplyMessage Clone() {
      return new AccessReplyMessage(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccessReplyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccessReplyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccessReplyMessage other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IdMessage : pb::IMessage<IdMessage> {
    private static readonly pb::MessageParser<IdMessage> _parser = new pb::MessageParser<IdMessage>(() => new IdMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdMessage(IdMessage other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdMessage Clone() {
      return new IdMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrisonerArrayMessage : pb::IMessage<PrisonerArrayMessage> {
    private static readonly pb::MessageParser<PrisonerArrayMessage> _parser = new pb::MessageParser<PrisonerArrayMessage>(() => new PrisonerArrayMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrisonerArrayMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrisonerArrayMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrisonerArrayMessage(PrisonerArrayMessage other) : this() {
      prisoners_ = other.prisoners_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrisonerArrayMessage Clone() {
      return new PrisonerArrayMessage(this);
    }

    /// <summary>Field number for the "prisoners" field.</summary>
    public const int PrisonersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PrisonService.PrisonerMessage> _repeated_prisoners_codec
        = pb::FieldCodec.ForMessage(10, global::PrisonService.PrisonerMessage.Parser);
    private readonly pbc::RepeatedField<global::PrisonService.PrisonerMessage> prisoners_ = new pbc::RepeatedField<global::PrisonService.PrisonerMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PrisonService.PrisonerMessage> Prisoners {
      get { return prisoners_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrisonerArrayMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrisonerArrayMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!prisoners_.Equals(other.prisoners_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= prisoners_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      prisoners_.WriteTo(output, _repeated_prisoners_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += prisoners_.CalculateSize(_repeated_prisoners_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrisonerArrayMessage other) {
      if (other == null) {
        return;
      }
      prisoners_.Add(other.prisoners_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            prisoners_.AddEntriesFrom(input, _repeated_prisoners_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LocationArrayMessage : pb::IMessage<LocationArrayMessage> {
    private static readonly pb::MessageParser<LocationArrayMessage> _parser = new pb::MessageParser<LocationArrayMessage>(() => new LocationArrayMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationArrayMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationArrayMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationArrayMessage(LocationArrayMessage other) : this() {
      locations_ = other.locations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationArrayMessage Clone() {
      return new LocationArrayMessage(this);
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PrisonService.LocationMessage> _repeated_locations_codec
        = pb::FieldCodec.ForMessage(10, global::PrisonService.LocationMessage.Parser);
    private readonly pbc::RepeatedField<global::PrisonService.LocationMessage> locations_ = new pbc::RepeatedField<global::PrisonService.LocationMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PrisonService.LocationMessage> Locations {
      get { return locations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationArrayMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationArrayMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!locations_.Equals(other.locations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= locations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      locations_.WriteTo(output, _repeated_locations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationArrayMessage other) {
      if (other == null) {
        return;
      }
      locations_.Add(other.locations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WorkerArrayMessage : pb::IMessage<WorkerArrayMessage> {
    private static readonly pb::MessageParser<WorkerArrayMessage> _parser = new pb::MessageParser<WorkerArrayMessage>(() => new WorkerArrayMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorkerArrayMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkerArrayMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkerArrayMessage(WorkerArrayMessage other) : this() {
      workers_ = other.workers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkerArrayMessage Clone() {
      return new WorkerArrayMessage(this);
    }

    /// <summary>Field number for the "workers" field.</summary>
    public const int WorkersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PrisonService.WorkerMessage> _repeated_workers_codec
        = pb::FieldCodec.ForMessage(10, global::PrisonService.WorkerMessage.Parser);
    private readonly pbc::RepeatedField<global::PrisonService.WorkerMessage> workers_ = new pbc::RepeatedField<global::PrisonService.WorkerMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PrisonService.WorkerMessage> Workers {
      get { return workers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorkerArrayMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorkerArrayMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!workers_.Equals(other.workers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= workers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      workers_.WriteTo(output, _repeated_workers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += workers_.CalculateSize(_repeated_workers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorkerArrayMessage other) {
      if (other == null) {
        return;
      }
      workers_.Add(other.workers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            workers_.AddEntriesFrom(input, _repeated_workers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JobArrayMessage : pb::IMessage<JobArrayMessage> {
    private static readonly pb::MessageParser<JobArrayMessage> _parser = new pb::MessageParser<JobArrayMessage>(() => new JobArrayMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JobArrayMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobArrayMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobArrayMessage(JobArrayMessage other) : this() {
      jobs_ = other.jobs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobArrayMessage Clone() {
      return new JobArrayMessage(this);
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PrisonService.JobMessage> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(10, global::PrisonService.JobMessage.Parser);
    private readonly pbc::RepeatedField<global::PrisonService.JobMessage> jobs_ = new pbc::RepeatedField<global::PrisonService.JobMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PrisonService.JobMessage> Jobs {
      get { return jobs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JobArrayMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JobArrayMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jobs_.Equals(other.jobs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jobs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      jobs_.WriteTo(output, _repeated_jobs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JobArrayMessage other) {
      if (other == null) {
        return;
      }
      jobs_.Add(other.jobs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoolMessage : pb::IMessage<BoolMessage> {
    private static readonly pb::MessageParser<BoolMessage> _parser = new pb::MessageParser<BoolMessage>(() => new BoolMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolMessage(BoolMessage other) : this() {
      reply_ = other.reply_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolMessage Clone() {
      return new BoolMessage(this);
    }

    /// <summary>Field number for the "reply" field.</summary>
    public const int ReplyFieldNumber = 1;
    private bool reply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reply {
      get { return reply_; }
      set {
        reply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reply != other.Reply) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reply != false) hash ^= Reply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reply != false) {
        output.WriteRawTag(8);
        output.WriteBool(Reply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reply != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolMessage other) {
      if (other == null) {
        return;
      }
      if (other.Reply != false) {
        Reply = other.Reply;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reply = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrisonerMessage : pb::IMessage<PrisonerMessage> {
    private static readonly pb::MessageParser<PrisonerMessage> _parser = new pb::MessageParser<PrisonerMessage>(() => new PrisonerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrisonerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrisonerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrisonerMessage(PrisonerMessage other) : this() {
      id_ = other.id_;
      fname_ = other.fname_;
      lname_ = other.lname_;
      age_ = other.age_;
      sentenceDate_ = other.sentenceDate_;
      releaseDate_ = other.releaseDate_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrisonerMessage Clone() {
      return new PrisonerMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "fname" field.</summary>
    public const int FnameFieldNumber = 2;
    private string fname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fname {
      get { return fname_; }
      set {
        fname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lname" field.</summary>
    public const int LnameFieldNumber = 3;
    private string lname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lname {
      get { return lname_; }
      set {
        lname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 4;
    private double age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "sentenceDate" field.</summary>
    public const int SentenceDateFieldNumber = 5;
    private long sentenceDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SentenceDate {
      get { return sentenceDate_; }
      set {
        sentenceDate_ = value;
      }
    }

    /// <summary>Field number for the "releaseDate" field.</summary>
    public const int ReleaseDateFieldNumber = 6;
    private long releaseDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReleaseDate {
      get { return releaseDate_; }
      set {
        releaseDate_ = value;
      }
    }

    /// <summary>Field number for the "locationId" field.</summary>
    public const int LocationIdFieldNumber = 7;
    private int locationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocationId {
      get { return locationId_; }
      set {
        locationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrisonerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrisonerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Fname != other.Fname) return false;
      if (Lname != other.Lname) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Age, other.Age)) return false;
      if (SentenceDate != other.SentenceDate) return false;
      if (ReleaseDate != other.ReleaseDate) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Fname.Length != 0) hash ^= Fname.GetHashCode();
      if (Lname.Length != 0) hash ^= Lname.GetHashCode();
      if (Age != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Age);
      if (SentenceDate != 0L) hash ^= SentenceDate.GetHashCode();
      if (ReleaseDate != 0L) hash ^= ReleaseDate.GetHashCode();
      if (LocationId != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Fname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fname);
      }
      if (Lname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Lname);
      }
      if (Age != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Age);
      }
      if (SentenceDate != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SentenceDate);
      }
      if (ReleaseDate != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ReleaseDate);
      }
      if (LocationId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Fname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fname);
      }
      if (Lname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lname);
      }
      if (Age != 0D) {
        size += 1 + 8;
      }
      if (SentenceDate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SentenceDate);
      }
      if (ReleaseDate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReleaseDate);
      }
      if (LocationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrisonerMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Fname.Length != 0) {
        Fname = other.Fname;
      }
      if (other.Lname.Length != 0) {
        Lname = other.Lname;
      }
      if (other.Age != 0D) {
        Age = other.Age;
      }
      if (other.SentenceDate != 0L) {
        SentenceDate = other.SentenceDate;
      }
      if (other.ReleaseDate != 0L) {
        ReleaseDate = other.ReleaseDate;
      }
      if (other.LocationId != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Fname = input.ReadString();
            break;
          }
          case 26: {
            Lname = input.ReadString();
            break;
          }
          case 33: {
            Age = input.ReadDouble();
            break;
          }
          case 40: {
            SentenceDate = input.ReadInt64();
            break;
          }
          case 48: {
            ReleaseDate = input.ReadInt64();
            break;
          }
          case 56: {
            LocationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LocationMessage : pb::IMessage<LocationMessage> {
    private static readonly pb::MessageParser<LocationMessage> _parser = new pb::MessageParser<LocationMessage>(() => new LocationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMessage(LocationMessage other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMessage Clone() {
      return new LocationMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WorkerMessage : pb::IMessage<WorkerMessage> {
    private static readonly pb::MessageParser<WorkerMessage> _parser = new pb::MessageParser<WorkerMessage>(() => new WorkerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorkerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkerMessage(WorkerMessage other) : this() {
      id_ = other.id_;
      fname_ = other.fname_;
      lname_ = other.lname_;
      jobId_ = other.jobId_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkerMessage Clone() {
      return new WorkerMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "fname" field.</summary>
    public const int FnameFieldNumber = 2;
    private string fname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fname {
      get { return fname_; }
      set {
        fname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lname" field.</summary>
    public const int LnameFieldNumber = 3;
    private string lname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lname {
      get { return lname_; }
      set {
        lname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jobId" field.</summary>
    public const int JobIdFieldNumber = 4;
    private int jobId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JobId {
      get { return jobId_; }
      set {
        jobId_ = value;
      }
    }

    /// <summary>Field number for the "locationId" field.</summary>
    public const int LocationIdFieldNumber = 5;
    private int locationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocationId {
      get { return locationId_; }
      set {
        locationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorkerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorkerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Fname != other.Fname) return false;
      if (Lname != other.Lname) return false;
      if (JobId != other.JobId) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Fname.Length != 0) hash ^= Fname.GetHashCode();
      if (Lname.Length != 0) hash ^= Lname.GetHashCode();
      if (JobId != 0) hash ^= JobId.GetHashCode();
      if (LocationId != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Fname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fname);
      }
      if (Lname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Lname);
      }
      if (JobId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(JobId);
      }
      if (LocationId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Fname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fname);
      }
      if (Lname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lname);
      }
      if (JobId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JobId);
      }
      if (LocationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorkerMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Fname.Length != 0) {
        Fname = other.Fname;
      }
      if (other.Lname.Length != 0) {
        Lname = other.Lname;
      }
      if (other.JobId != 0) {
        JobId = other.JobId;
      }
      if (other.LocationId != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Fname = input.ReadString();
            break;
          }
          case 26: {
            Lname = input.ReadString();
            break;
          }
          case 32: {
            JobId = input.ReadInt32();
            break;
          }
          case 40: {
            LocationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JobMessage : pb::IMessage<JobMessage> {
    private static readonly pb::MessageParser<JobMessage> _parser = new pb::MessageParser<JobMessage>(() => new JobMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JobMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PrisonService.PrisonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobMessage(JobMessage other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobMessage Clone() {
      return new JobMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JobMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JobMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JobMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
